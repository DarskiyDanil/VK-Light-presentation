//
//  NewsFeedInteractor.swift
//  VK-Light-presentation
//
//  Created by  Данил Дарский on 21.04.2020.
//  Copyright (c) 2020  Данил Дарский. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
// сетевой запрос

import UIKit

protocol NewsFeedBusinessLogic {
    func makeRequest(request: NewsFeed.Model.Request.RequestType)
}

protocol NewsFeedDataStore {
    //var name: String { get set }
}

class NewsFeedInteractor: NewsFeedBusinessLogic, NewsFeedDataStore {
    var presenter: NewsFeedPresentationLogic?
    var worker: NewsFeedWorker?
    
    // MARK: - Do Request
    
    func makeRequest(request: NewsFeed.Model.Request.RequestType) {
        if worker == nil {
            worker = NewsFeedWorker()
        }
        
        switch request {
        case .getNewsFeed:
            worker?.getFeed(completion: { [weak self] (openedPostIds, news) in
                self?.presenter?.presentData(response: NewsFeed.Model.Response.ResponseType.presentNewsFeed(feed: news, openedPostIds: openedPostIds))
            })
        case .getUser:
            worker?.getUser(completion: { [weak self] (user) in
                self?.presenter?.presentData(response: NewsFeed.Model.Response.ResponseType.presentUserPhoto(user: user))
            })
        case .openPostId(postId: let postId):
            worker?.openPostId(forPostId: postId, completion: { [weak self] (openedPostIds, news) in
                self?.presenter?.presentData(response: NewsFeed.Model.Response.ResponseType.presentNewsFeed(feed: news, openedPostIds: openedPostIds))
            })
        case .getNextNewsList:

            self.presenter?.presentData(response: NewsFeed.Model.Response.ResponseType.presentFooterLoader)
            worker?.getNextNewsList(completion: { (openedPostIds, news) in
                self.presenter?.presentData(response: NewsFeed.Model.Response.ResponseType.presentNewsFeed(feed: news, openedPostIds: openedPostIds))
            })
        }

    }
    
}
