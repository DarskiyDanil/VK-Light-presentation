//
//  NewsFeedModels.swift
//  VK-Light-presentation
//
//  Created by  Данил Дарский on 21.04.2020.
//  Copyright (c) 2020  Данил Дарский. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum NewsFeed {
    // MARK: Use cases
    
    enum Model {
        struct Request {
            enum RequestType {
                case getNewsFeed
                case getUser
                case openPostId(postId: Int)
                case getNextNewsList
            }
        }
        
        struct Response {
            enum ResponseType {
                case presentNewsFeed(feed: ResponseNews, openedPostIds: [Int] )
                case presentUserPhoto(user: UserResponse?)
                case presentFooterLoader
            }
        }
        
        struct ViewModel {
            enum ViewModelData {
                case displayNewsFeed(feedViewModel: FeedViewModel)
                case displayUser(userViewModel: UserViewModel)
                case displayFooterLoader
            }
        }
    }
}

struct UserViewModel: titleViewModelProtocol {
    var photoUrlString: String?
}

struct FeedViewModel {
    struct Cell: FeedCellViewModelProtocol {
        var postId: Int
        var iconUrlString: String
        var name: String
        var date: String
        var text: String?
        var likes: String?
        var comments: String?
        var shares: String?
        var viewers: String?
        var photoAttachments: [FeedCellPhotoAttachmentViewModelProtocol]
        var sizes: FeedCellSizes
    }
    
    struct FeedCellPhotoAttachment: FeedCellPhotoAttachmentViewModelProtocol {
        var photoUrlString: String?
        var width: Int
        var height: Int
    }
    
    let cells: [Cell]
    let footerTitle: String?
    
}
